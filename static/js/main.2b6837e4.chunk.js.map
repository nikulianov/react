{"version":3,"sources":["Redux/auth-reducer.js","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Navbar/Navbar.jsx","Redux/app-reducer.js","hoc/lazySuspense.jsx","App.js","serviceWorker.js","Redux/redux-store.js","index.js","Components/common/preloader/Preloader.jsx","Components/Navbar/Navbar.module.scss","Redux/profile-reducer.js","api/api.js","Redux/dialogs-reducer.js","util/Object-helpers.js","Redux/users-reducer.js","Components/Header/Header.module.scss","access/images/Preloader.svg","Components/common/preloader/Preloader.module.scss"],"names":["initiate","userId","email","login","isAuth","captchaUrl","setAuthUserData","data","getAuthStatus","dispatch","authAPI","getLoginAuth","then","response","resultCode","id","password","rememberMe","captcha","a","getCaptchaUrl","message","messages","length","stopSubmit","_error","deleteAuthStatus","logout","captchaAPI","url","payload","authReducer","state","action","type","Header","props","href","src","className","s","loginAuth","onClick","to","HeaderContainer","this","React","Component","connect","auth","Navbar","exact","activeClassName","active","initialazet","appReducer","lazySuspence","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","initialazeApp","from","path","render","compose","withRouter","app","promise","Promise","all","Boolean","window","location","hostname","match","reducerAll","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","rerender","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","getState","subscribe","preloader","module","exports","posts","postText","profile","status","editProfile","addPostCreateAction","getStatusProfile","savePhotoSucsess","photo","goToEditProfile","valueMode","getProfileThunk","profileAPI","getProfile","getStatusThunk","getStatus","updateStatusThunk","updateStatus","savePhoto","setSavePhoto","photos","setEditProfile","postItem","instanse","axios","withCredentials","baseURL","headers","headerAPI","getUsers","currentPage","pageSize","get","getfollow","delete","getUnfollow","post","getHeaderAuth","put","formData","FormData","append","dialogs","messageText","addMessagesCreateAction","messageItem","updateObjectInArray","items","objPropName","newObjProps","map","m","users","totalUsersCount","isFetch","followingProgress","follow","unfollow","setUsers","setCurrent","current","setAllUsersCount","count","setIsFetch","togglefollowingProgress","getUsersThunkCreator","console","log","totalCount","followUnfollow","nameMethod","actionCreator","getFollow","followed","filter"],"mappings":"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","file":"static/js/main.2b6837e4.chunk.js","sourcesContent":["import {authAPI, captchaAPI} from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = \"SET-AUTH-USER-DATA\";\r\nconst GET_CAPTCHA_SUCSESS = \"GET_CAPTCHA_SUCSESS\";\r\n\r\n\r\nlet initiate = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl:null\r\n};\r\n\r\nconst authReducer = (state = initiate, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        };\r\n\r\n        case GET_CAPTCHA_SUCSESS: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ \"type\": SET_AUTH_USER_DATA, data: { userId, email, login, isAuth } })\r\nexport const getCuptchaSucsess = (captchaUrl) => ({ \"type\": GET_CAPTCHA_SUCSESS, payload:{captchaUrl}})\r\n\r\nexport const getAuthStatus = () => (dispatch) => {\r\n\r\n    return authAPI.getLoginAuth().then(response => {\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let { id, login, email } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe,captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthStatus());\r\n\r\n    } else {\r\n        if (response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"somthing wrong\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const deleteAuthStatus = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n\r\n    let response = await captchaAPI.getCaptchaUrl();\r\n    let captcha = response.data.url;\r\n    dispatch(getCuptchaSucsess(captcha));\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet Header = (props) => {\r\n\r\n\r\n  return (\r\n\r\n    <header >\r\n      <a href=\"\">\r\n        <img src=\"logo.png\" />\r\n      </a>\r\n\r\n      <div className={s.login}>\r\n\r\n        {props.isAuth ? <div> {props.loginAuth} < span onClick={props.deleteAuthStatus} > Выход</span></div> : <NavLink to={'/login'}>Login</NavLink >}\r\n\r\n      </div>\r\n    </header >\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthStatus, deleteAuthStatus, login } from '../../Redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    this.props.getAuthStatus();\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} deleteAuthStatus={this.props.deleteAuthStatus} />\r\n\r\n    );\r\n  }\r\n}\r\n\r\nlet setStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  loginAuth: state.auth.login\r\n});\r\nexport default connect(setStateToProps, { getAuthStatus, deleteAuthStatus, login })(HeaderContainer);\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialogs</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n        </li>\r\n\r\n\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","\r\nimport { getAuthStatus } from './auth-reducer';\r\n\r\nconst GET_INITIALAZET = \"GET_INITIALAZET\";\r\n\r\n\r\nlet initiate = {\r\n    initialazet: false\r\n};\r\n\r\nconst appReducer = (state = initiate, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_INITIALAZET: {\r\n            return {\r\n                ...state,\r\n                initialazet: true\r\n            }\r\n        };\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initialazeSuccess = () => ({ \"type\": GET_INITIALAZET })\r\n\r\nexport const initialazeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthStatus());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initialazeSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer\r\n\r\n\r\n","import React from 'react';\r\nimport Preloader from \"../Components/common/preloader/Preloader\";\r\n\r\n\r\n\r\nexport const lazySuspence = (Component) => {\r\n       return <React.Suspense fallback={<Preloader/>}>\r\n        <Component/>\r\n    </React.Suspense>\r\n\r\n}\r\n\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport { Redirect, Route, withRouter } from \"react-router-dom\";\nimport { initialazeApp } from \"./Redux/app-reducer\"\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport Preloader from \"./Components/common/preloader/Preloader\";\nimport { lazySuspence } from \"./hoc/lazySuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./Components/Profiles/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\nconst Login = React.lazy(() => import('./Components/Login/login'));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initialazeApp();\n  }\n\n  render() {\n\n    if (!this.props.initialazet) {\n      return <Preloader />\n    }\n    return (\n\n\n      <div className=\"app-wrapper\" >\n        <HeaderContainer />\n\n        <div className=\"main-content\">\n          <Navbar />\n          <div className=\"content\">\n            <switch>\n              <Redirect from=\"/\" to=\"/profile\" />\n              <Route path='/dialogs' render={() => { return lazySuspence(DialogsContainer); }} />\n              <Route path='/profile/:userId?' render={() => { return lazySuspence(ProfileContainer) }} />\n              <Route path='/users' render={() => { return lazySuspence(UsersContainer) }} />\n              <Route path='/login' render={() => { return lazySuspence(Login) }} />\n            </switch>\n\n          </div>\n        </div>\n\n      </div >\n\n    );\n  }\n}\nlet mapStateToProps = (state) => ({\n  initialazet: state.app.initialazet\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initialazeApp })\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducerAll = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducerAll, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","\nimport React from 'react';\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store';\nimport { Provider } from 'react-redux';\n\nlet rerender = (state) => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter >\n        , document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n}\n\nrerender(store.getState());\nstore.subscribe(() => {\n    rerender(store.getState());\n});\n\n\n\n\n","import React from 'react';\r\nimport preloader from '../../../access/images/Preloader.svg';\r\nimport s from './Preloader.module.scss';\r\n\r\nlet Preloader = () => {\r\n    return <div className=\"s.contentPreloader\">\r\n        <img src={preloader} className={s.Preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Navbar_active__1SmXC\"};","import { profileAPI } from '../api/api';\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst GET_USERS_PROFILE = \"GET-USERS-PROFILE\";\r\nconst GET_STATUS = \"GET-STATUS\";\r\nconst SET_PHOTO_SUCSESS = \"SET_PHOTO_SUCSESS\";\r\nconst EDIT_PROFILE_MODE = \"EDIT_PROFILE_MODE\";\r\n\r\nlet initiate = {\r\n    posts: [\r\n        { id: 1, \"message\": 'Hello, it is first post' },\r\n        { id: 2, \"message\": 'Hello, it is second post !!!!!!!!' },\r\n    ],\r\n    postText: '',\r\n    profile: null,\r\n    status: \"\",\r\n    editProfile:false\r\n\r\n};\r\n\r\nconst profileReducer = (state = initiate, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let postItem = { id: 3, message: action.postText };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, postItem],\r\n                postText: ''\r\n            }\r\n        };\r\n\r\n\r\n\r\n\r\n        case GET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        };\r\n\r\n        case GET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        };\r\n\r\n        case SET_PHOTO_SUCSESS: {\r\n            return {\r\n                ...state,\r\n            profile:{...state.profile, photos:action.photo}\r\n            }\r\n        };\r\n\r\n        case EDIT_PROFILE_MODE: {\r\n            return {\r\n                ...state,\r\n                editProfile:action.valueMode\r\n            }\r\n        };\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostCreateAction = (postText) => ({ \"type\": ADD_POST, postText })\r\nexport const setUsersProfile = (profile) => ({ \"type\": GET_USERS_PROFILE, profile })\r\nexport const getStatusProfile = (status) => ({ \"type\": GET_STATUS, status: status })\r\nexport const savePhotoSucsess = (photo) =>({\"type\":SET_PHOTO_SUCSESS, photo})\r\nexport const goToEditProfile = (valueMode) =>({\"type\":EDIT_PROFILE_MODE,valueMode})\r\n\r\n\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n\r\n\r\n    if (!userId) {\r\n        userId = 2;\r\n    }\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUsersProfile(response.data))\r\n\r\n}\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(getStatusProfile(response.data));\r\n\r\n}\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getStatusProfile(status))\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport const savePhoto = (photo) => async (dispatch) =>{\r\n    let response = await profileAPI.setSavePhoto(photo);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSucsess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const setEditProfile= (profile) => async (dispatch,getState) =>{\r\n    let userId = getState().auth.userId;\r\n    let response = await profileAPI.setEditProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfileThunk(userId))\r\n        dispatch(goToEditProfile(false))\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer\r\n\r\n\r\n","\r\nimport * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"66f7cf9e-2f69-4259-a909-e3d86f765cc4\"\r\n    }\r\n\r\n});\r\n\r\nexport const headerAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 100) => {\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    getfollow: (id = 1) => {\r\n        return instanse.delete(`follow/${id}`).then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    getUnfollow: (id = 1) => {\r\n        return instanse.post(`follow/${id}`).then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    getHeaderAuth: () => {\r\n        return instanse.post(`auth/me`);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId) => {\r\n        return instanse.get(`profile/` + userId);\r\n    },\r\n\r\n    updateStatus: (status) => {\r\n        return instanse.put(`profile/status`, { status: status });\r\n    },\r\n    setSavePhoto: (photo) => {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n        return instanse.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    setEditProfile: (profile) => {\r\n        return instanse.put(`profile`, profile);\r\n    },\r\n\r\n    getStatus: (userId) => {\r\n        return instanse.get(`profile/status/` + userId);\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    getLoginAuth: () => {\r\n        return instanse.get(`auth/me`);\r\n    },\r\n\r\n    logout: () => {\r\n        return instanse.delete(`auth/login`);\r\n    },\r\n    login: (email, password, rememberMe = false, captcha = null) => {\r\n        return instanse.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    }\r\n}\r\n\r\nexport const captchaAPI = {\r\n    getCaptchaUrl: () => {\r\n        return instanse.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initiate = {\r\n    dialogs: [\r\n        { \"id\": 1, \"name\": \"Андрей\" },\r\n        { \"id\": 2, \"name\": \"Степан\" },\r\n        { \"id\": 3, \"name\": \"Жена\" },\r\n        { \"id\": 4, \"name\": \"Артем\" },\r\n        { \"id\": 5, \"name\": \"Мама\" }\r\n    ],\r\n    messages: [\r\n        { \"id\": 1, \"messages\": \"Привет, как дела?\" },\r\n        { \"id\": 2, \"messages\": \"Ты тут?\" },\r\n        { \"id\": 3, \"messages\": \"Завтра пойдем в кино?\" }\r\n\r\n    ],\r\n    messageText: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initiate, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let messageItem = { \"id\": 5, \"messages\": action.messageText };\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, messageItem],\r\n                messageText: ''\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addMessagesCreateAction = (messageText) => ({ \"type\": ADD_MESSAGE, messageText })\r\nexport default dialogsReducer\r\n","export const updateObjectInArray = (items, userId, objPropName, newObjProps) => {\r\n\r\n    return items.map(m => {\r\n        if (m[objPropName] === userId) {\r\n            return { ...m, ...newObjProps }\r\n        }\r\n\r\n        return m;\r\n    })\r\n\r\n}\r\n","\r\nimport { headerAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../util/Object-helpers';\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-UDERS\";\r\nconst SET_CURRENT = \"SET-CURRENT\";\r\nconst ALL_COUNT_USERS = \"ALL-COUNT-USERS\";\r\nconst TOGGLE_FETCH = \"TOGGLE-FETCH\";\r\nconst TOGGLE_FETCH_PROGRESS = \"TOGGLE-FETCH-PROGRESS\";\r\n\r\n\r\nlet initiate = {\r\n    users: [\r\n\r\n    ],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    isFetch: true,\r\n    followingProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initiate, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n                /* users: state.users.map(m => {\r\n                     if (m.id === action.userId) {\r\n                         return { ...m, followed: false }\r\n                     }\r\n \r\n                     return m;\r\n                 }) */\r\n            }\r\n\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state, currentPage: action.current\r\n            }\r\n\r\n        case ALL_COUNT_USERS:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n\r\n        case TOGGLE_FETCH:\r\n            return {\r\n                ...state, isFetch: action.isFetch\r\n            }\r\n\r\n        case TOGGLE_FETCH_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetch ?\r\n                    [...state.followingProgress, action.userId] :\r\n                    [state.followingProgress.filter(id => id != action.userId)]\r\n            }\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({ \"type\": FOLLOW, userId });\r\nexport const unfollow = (userId) => ({ \"type\": UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ \"type\": SET_USERS, users });\r\nexport const setCurrent = (current) => ({ \"type\": SET_CURRENT, current });\r\nexport const setAllUsersCount = (count) => ({ \"type\": ALL_COUNT_USERS, count });\r\nexport const setIsFetch = (isFetch) => ({ \"type\": TOGGLE_FETCH, isFetch });\r\nexport const togglefollowingProgress = (isFetch, userId) => ({ \"type\": TOGGLE_FETCH_PROGRESS, isFetch, userId });\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n\r\n    console.log(currentPage)\r\n    dispatch(setIsFetch(true));\r\n    dispatch(setCurrent(currentPage));\r\n    let response = await headerAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setIsFetch(false));\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setAllUsersCount(response.data.totalCount));\r\n\r\n}\r\n\r\nconst followUnfollow = async (dispatch, nameMethod, userId, actionCreator) => {\r\n    dispatch(togglefollowingProgress(true, userId));\r\n    let data = await nameMethod(userId);\r\n\r\n    if (data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(togglefollowingProgress(false, userId));;\r\n\r\n}\r\n\r\n\r\nexport const getUnfollow = (userId) => async (dispatch) => {\r\n\r\n    followUnfollow(dispatch, headerAPI.getfollow, userId, unfollow);\r\n\r\n\r\n    /* dispatch(togglefollowingProgress(true, userId));\r\n    let data = await headerAPI.getfollow(userId);\r\n\r\n    if (data.resultCode == 0) {\r\n        dispatch(unfollow(userId));\r\n    }\r\n    dispatch(togglefollowingProgress(false, userId));\r\n*/\r\n\r\n}\r\n\r\nexport const getFollow = (userId) => async (dispatch) => {\r\n\r\n\r\n    followUnfollow(dispatch, headerAPI.getUnfollow, userId, follow);\r\n\r\n    /* dispatch(togglefollowingProgress(true, userId));\r\n     let data = await headerAPI.getUnfollow(userId);\r\n \r\n     if (data.resultCode == 0) {\r\n         dispatch(follow(userId));\r\n     }\r\n     dispatch(togglefollowingProgress(false, userId));;\r\n */\r\n\r\n}\r\n\r\nexport default usersReducer\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Header_login__1hg9-\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.a225a700.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__1zB8d\"};"],"sourceRoot":""}