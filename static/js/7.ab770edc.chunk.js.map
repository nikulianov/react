{"version":3,"sources":["Components/common/formsControls.module.scss","Components/common/formsControls.js","util/validate.js","Components/common/formInputCreator.js","Components/Login/login.jsx"],"names":["module","exports","TextArea","input","meta","props","hasError","touched","error","className","s","formControl","Input","required","value","maxLengthCreator","maxLength","length","inputCreator","name","validate","component","placeholder","text","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","type","SistemErrorMessage","captchaUrl","src","alt","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe","captcha"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,YAAc,mCAAmC,mBAAqB,4C,oJCIhHC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE/CC,EAAWF,EAAKG,SAAWH,EAAKI,MACpC,OAGI,yBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,KAExD,6BACI,8CAAcL,EAAWE,KAE5BC,GAAY,8BAAOF,EAAKI,SAMxBI,EAAQ,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE5CC,EAAWF,EAAKG,SAAWH,EAAKI,MACpC,OAGI,yBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,KAExD,6BACI,2CAAWL,EAAWE,KAEzBC,GAAY,8BAAOF,EAAKI,U,iCCjCrC,oEAAO,IAAMK,EAAW,SAACC,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCNlC,+DAKaE,EAAe,SAACC,EAAMC,EAAUC,EAAWC,GAAwC,IAA3BjB,EAA0B,uDAAlB,GAAIkB,EAAc,uDAAP,GACpF,OACI,6BACI,kBAAC,IAAD,eAAOJ,KAAMA,EAAMC,SAAUA,EAAUC,UAAWA,EAAWC,YAAaA,GAAiBjB,IAC1FkB,K,iCCTb,yGA+BMC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAnBL,SAACpB,GACf,OAEI,0BAAMsB,SAAUtB,EAAMuB,cAIjBV,YAAa,QAAS,CAACL,KAAWD,IAAO,SACzCM,YAAa,WAAY,CAACL,KAAWD,IAAO,WAAY,CAAEiB,KAAM,aAChExB,EAAMG,OAAS,yBAAKC,UAAWC,IAAEoB,oBAAqBzB,EAAMG,MAA7C,KACfU,YAAa,aAAc,KAAMN,IAAO,GAAI,CAAEiB,KAAM,YAAc,eAElExB,EAAM0B,YAAc,yBAAKC,IAAK3B,EAAM0B,WAAYE,IAAI,KACpD5B,EAAM0B,YAAcb,YAAa,UAAW,CAACL,KAAWD,IAAO,GAAI,IACpE,4BAAQiB,KAAK,UAAb,cA8BGK,uBANS,SAACC,GAAD,MAAY,CAEhCC,OAAQD,EAAME,KAAKD,OACnBL,WAAYI,EAAME,KAAKN,cAGa,CAAEO,WAA3BJ,EAvBD,SAAC7B,GAKX,OAAIA,EAAM+B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAIrB,6BACI,qCACA,kBAACf,EAAD,CAAgBG,SAXP,SAACa,GACdnC,EAAMiC,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAWH,EAASI,UAUpCb,WAAY1B,EAAM0B","file":"static/js/7.ab770edc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControls_error__1QVHI\",\"formControl\":\"formsControls_formControl__5dwLN\",\"SistemErrorMessage\":\"formsControls_SistemErrorMessage__1oDNz\"};","import React from \"react\";\r\nimport s from \"./formsControls.module.scss\";\r\n\r\n\r\n\r\nexport const TextArea = ({ input, meta, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n\r\n\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n\r\n\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is requyred\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symvols`;\r\n    return undefined;\r\n}","import React from 'react';\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n\r\nexport const inputCreator = (name, validate, component, placeholder, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field name={name} validate={validate} component={component} placeholder={placeholder} {...props} />\r\n            {text}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from '../common/formsControls';\r\nimport { required } from '../../util/validate';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from \"./../common/formsControls.module.scss\";\r\nimport { inputCreator } from '../common/formInputCreator';\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n\r\n\r\n            {inputCreator(\"email\", [required], Input, \"email\")}\r\n            {inputCreator(\"password\", [required], Input, \"Password\", { type: \"password\" })}\r\n            {props.error && <div className={s.SistemErrorMessage}>{props.error} </div>}\r\n            {inputCreator(\"rememberMe\", null, Input, \"\", { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=\"\"/>}\r\n            {props.captchaUrl && inputCreator(\"captcha\", [required], Input, \"\", {}, )}\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe,formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}