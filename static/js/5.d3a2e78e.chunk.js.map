{"version":3,"sources":["Components/common/formsControls.module.scss","Components/common/formsControls.js","util/validate.js","hoc/withAuthRedirect.jsx","Components/Dialogs/Dialogs.module.scss","Components/Dialogs/DialogsItem/DialogsItem.jsx","Components/Dialogs/Messages/Messages.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","TextArea","input","meta","props","hasError","touched","error","className","s","formControl","Input","required","value","maxLengthCreator","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedicert","Component","RedirectComponent","this","to","React","connect","DialogsItem","path","id","dialog","name","Messages","message","messageName","messageContent","DialogsAddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","textMessage","component","validate","buttonSent","Dialogs","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","allDialogs","values","console","log","addMessages","compose","messageText","dispatch","addMessagesCreateAction"],"mappings":"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","file":"static/js/5.d3a2e78e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControls_error__1QVHI\",\"formControl\":\"formsControls_formControl__5dwLN\",\"SistemErrorMessage\":\"formsControls_SistemErrorMessage__1oDNz\"};","import React from \"react\";\r\nimport s from \"./formsControls.module.scss\";\r\n\r\n\r\n\r\nexport const TextArea = ({ input, meta, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n\r\n\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n\r\n\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is requyred\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symvols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedicert = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n\r\n\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectCompoment = connect(mapStateToPropsRedirect, {})(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectCompoment\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allDialogs\":\"Dialogs_allDialogs__3IF0o\",\"dialogs\":\"Dialogs_dialogs__3TyCL\",\"dialog\":\"Dialogs_dialog__38roe\",\"messages\":\"Dialogs_messages__3BWWr\",\"message\":\"Dialogs_message__3CFhu\",\"messageName\":\"Dialogs_messageName__3D3np\",\"messageContent\":\"Dialogs_messageContent__2OsDx\",\"textMessage\":\"Dialogs_textMessage__PDXH_\",\"buttonSent\":\"Dialogs_buttonSent__379yt\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.scss\";\r\n\r\n\r\nfunction DialogsItem(props) {\r\n\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog}><NavLink to={path}>{props.name}</NavLink></div>\r\n  )\r\n};\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.scss\";\r\n\r\n\r\nconst Messages = (props) => {\r\n  return (\r\n    <div className={s.message}><span className={s.messageName}>Андрей</span>\r\n      <div className={s.messageContent}>{props.message}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Messages from './Messages/Messages';\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { TextArea } from \"../common/formsControls\";\r\nimport { required, maxLengthCreator } from \"../../util/validate\";\r\n\r\n\r\n\r\nlet maxLength = maxLengthCreator(10);\r\n\r\nfunction Dialogs(props) {\r\n\r\n\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElement = state.dialogs.map(d => <DialogsItem name={d.name} id={d.id} key={d.id} />);\r\n  let messagesElement = state.messages.map(m => <Messages message={m.messages} key={m.id} />);\r\n\r\n  let addMessages = (values) => {\r\n    console.log(values);\r\n    props.addMessages(values.message);\r\n  }\r\n\r\n  return (\r\n    <div className={s.allDialogs}>\r\n      <div className={s.dialogs}>\r\n        {dialogsElement}\r\n\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElement}\r\n\r\n        <DialogsAddMessageFormRedux onSubmit={addMessages} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DialogsAddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field className={s.textMessage} name=\"message\" component={TextArea} validate={[required, maxLength]} />\r\n      <button className={s.buttonSent} >Отправить</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogsAddMessageFormRedux = reduxForm({ form: \"addMessageForm\" })(DialogsAddMessageForm);\r\n\r\nexport default Dialogs;","\r\nimport { addMessagesCreateAction, changeMessagesAreaCreateAction } from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedicert } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    messageText: state.dialogsPage.messageText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessages: (textMessage) => {\r\n      dispatch(addMessagesCreateAction(textMessage));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedicert\r\n)(Dialogs)"],"sourceRoot":""}